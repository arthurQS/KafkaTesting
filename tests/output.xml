<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.8.0 on win32)" generated="20201229 17:10:54.186" rpa="false">
<suite id="s1" name="02 Topic" source="C:\Users\90012824\Documents\Projetos\KafkaTesting\tests\02_topic.robot">
<kw name="Connect to Local Kafka" library="resources" type="setup">
<kw name="Connect To Kafka" library="KafkaLibrary">
<doc>Connect to kafka
- ``bootstrap_servers``: default 127.0.0.1:9092
- ``client_id``: default: Robot</doc>
<arguments>
<arg>bootstrap_servers=${BOOTSTRAP_SERVERS}</arg>
<arg>auto_offset_reset=latest</arg>
<arg>client_id=Robot</arg>
<arg>group_id=${GROUP_ID}</arg>
</arguments>
<msg timestamp="20201229 17:10:54.274" level="INFO">&lt;BrokerConnection node_id=bootstrap-0 host=127.0.0.1:9092 &lt;connecting&gt; [IPv4 ('127.0.0.1', 9092)]&gt;: connecting to 127.0.0.1:9092 [('127.0.0.1', 9092) IPv4]</msg>
<msg timestamp="20201229 17:10:54.274" level="INFO">Probing node bootstrap-0 broker version</msg>
<msg timestamp="20201229 17:10:54.274" level="INFO">&lt;BrokerConnection node_id=bootstrap-0 host=127.0.0.1:9092 &lt;connecting&gt; [IPv4 ('127.0.0.1', 9092)]&gt;: Connection complete.</msg>
<msg timestamp="20201229 17:10:54.387" level="INFO">Broker version identified as 2.3.0</msg>
<msg timestamp="20201229 17:10:54.387" level="INFO">Set configuration api_version=(2, 3, 0) to skip auto check_version requests on startup</msg>
<msg timestamp="20201229 17:10:54.388" level="INFO">&lt;BrokerConnection node_id=bootstrap-0 host=127.0.0.1:9092 &lt;connecting&gt; [IPv4 ('127.0.0.1', 9092)]&gt;: connecting to 127.0.0.1:9092 [('127.0.0.1', 9092) IPv4]</msg>
<msg timestamp="20201229 17:10:54.388" level="INFO">Probing node bootstrap-0 broker version</msg>
<msg timestamp="20201229 17:10:54.389" level="INFO">&lt;BrokerConnection node_id=bootstrap-0 host=127.0.0.1:9092 &lt;connecting&gt; [IPv4 ('127.0.0.1', 9092)]&gt;: Connection complete.</msg>
<msg timestamp="20201229 17:10:54.498" level="INFO">Broker version identified as 2.3.0</msg>
<msg timestamp="20201229 17:10:54.499" level="INFO">Set configuration api_version=(2, 3, 0) to skip auto check_version requests on startup</msg>
<status status="PASS" starttime="20201229 17:10:54.267" endtime="20201229 17:10:54.507"></status>
</kw>
<status status="PASS" starttime="20201229 17:10:54.267" endtime="20201229 17:10:54.507"></status>
</kw>
<test id="s1-t1" name="Get Kafka Topics">
<kw name="Get Kafka Topics" library="KafkaLibrary">
<doc>Return list of kafka topics.</doc>
<assign>
<var>${topics}</var>
</assign>
<msg timestamp="20201229 17:10:54.520" level="INFO">${topics} = ['__confluent.support.metrics', '_confluent-metrics']</msg>
<status status="PASS" starttime="20201229 17:10:54.510" endtime="20201229 17:10:54.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${topics}</arg>
</arguments>
<msg timestamp="20201229 17:10:54.521" level="INFO">['__confluent.support.metrics', '_confluent-metrics']</msg>
<status status="PASS" starttime="20201229 17:10:54.521" endtime="20201229 17:10:54.521"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${topics}</arg>
</arguments>
<msg timestamp="20201229 17:10:54.521" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20201229 17:10:54.521" endtime="20201229 17:10:54.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${topics}</arg>
<arg>__confluent.support.metrics</arg>
</arguments>
<status status="PASS" starttime="20201229 17:10:54.522" endtime="20201229 17:10:54.522"></status>
</kw>
<status status="PASS" starttime="20201229 17:10:54.508" endtime="20201229 17:10:54.522" critical="yes"></status>
</test>
<test id="s1-t2" name="Create Topicpartition object">
<kw name="Create Topicpartition" library="KafkaLibrary">
<doc>Create TopicPartition object</doc>
<arguments>
<arg>${topic}</arg>
<arg>${TEST_TOPIC_PARTITIONS}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20201229 17:10:54.524" level="INFO">${ret} = TopicPartition(topic='test-topic', partition=1)</msg>
<status status="PASS" starttime="20201229 17:10:54.524" endtime="20201229 17:10:54.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<msg timestamp="20201229 17:10:54.524" level="INFO">TopicPartition(topic='test-topic', partition=1)</msg>
<status status="PASS" starttime="20201229 17:10:54.524" endtime="20201229 17:10:54.524"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ret.topic}</arg>
<arg>${topic}</arg>
</arguments>
<status status="PASS" starttime="20201229 17:10:54.524" endtime="20201229 17:10:54.525"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${ret.partition}</arg>
<arg>${TEST_TOPIC_PARTITIONS}</arg>
</arguments>
<status status="PASS" starttime="20201229 17:10:54.525" endtime="20201229 17:10:54.525"></status>
</kw>
<status status="PASS" starttime="20201229 17:10:54.523" endtime="20201229 17:10:54.525" critical="yes"></status>
</test>
<test id="s1-t3" name="Auto Create Topic on kafka with new message">
<kw name="Get Kafka Topics" library="KafkaLibrary">
<doc>Return list of kafka topics.</doc>
<assign>
<var>${topics}</var>
</assign>
<msg timestamp="20201229 17:10:54.699" level="INFO">&lt;BrokerConnection node_id=1 host=localhost:9092 &lt;connecting&gt; [IPv6 ('::1', 9092, 0, 0)]&gt;: connecting to localhost:9092 [('::1', 9092, 0, 0) IPv6]</msg>
<msg timestamp="20201229 17:10:54.700" level="INFO">&lt;BrokerConnection node_id=1 host=localhost:9092 &lt;connecting&gt; [IPv6 ('::1', 9092, 0, 0)]&gt;: Connection complete.</msg>
<msg timestamp="20201229 17:10:54.700" level="INFO">&lt;BrokerConnection node_id=bootstrap-0 host=127.0.0.1:9092 &lt;connected&gt; [IPv4 ('127.0.0.1', 9092)]&gt;: Closing connection. </msg>
<msg timestamp="20201229 17:10:54.705" level="INFO">${topics} = ['__confluent.support.metrics', '_confluent-metrics']</msg>
<status status="PASS" starttime="20201229 17:10:54.526" endtime="20201229 17:10:54.705"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${topics}</arg>
</arguments>
<assign>
<var>${topics_no}</var>
</assign>
<msg timestamp="20201229 17:10:54.706" level="INFO">Length is 2</msg>
<msg timestamp="20201229 17:10:54.706" level="INFO">${topics_no} = 2</msg>
<status status="PASS" starttime="20201229 17:10:54.706" endtime="20201229 17:10:54.706"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${topics}</arg>
</arguments>
<msg timestamp="20201229 17:10:54.706" level="INFO">Length is 2</msg>
<status status="PASS" starttime="20201229 17:10:54.706" endtime="20201229 17:10:54.707"></status>
</kw>
<kw name="Topic name with random sufix" library="resources">
<arguments>
<arg>${topic}</arg>
</arguments>
<assign>
<var>${test_topic}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>4</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${suffix}</var>
</assign>
<msg timestamp="20201229 17:10:54.707" level="INFO">${suffix} = wqqy</msg>
<status status="PASS" starttime="20201229 17:10:54.707" endtime="20201229 17:10:54.707"></status>
</kw>
<kw name="Format String" library="String">
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<arguments>
<arg>{}-{}</arg>
<arg>${topic_name}</arg>
<arg>${suffix}</arg>
</arguments>
<assign>
<var>${topic_name_with_random}</var>
</assign>
<msg timestamp="20201229 17:10:54.707" level="INFO">${topic_name_with_random} = test-topic-wqqy</msg>
<status status="PASS" starttime="20201229 17:10:54.707" endtime="20201229 17:10:54.708"></status>
</kw>
<msg timestamp="20201229 17:10:54.708" level="INFO">${test_topic} = test-topic-wqqy</msg>
<status status="PASS" starttime="20201229 17:10:54.707" endtime="20201229 17:10:54.708"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${topics}</arg>
<arg>${test_topic}</arg>
</arguments>
<status status="PASS" starttime="20201229 17:10:54.708" endtime="20201229 17:10:54.708"></status>
</kw>
<kw name="Send Text Message" library="resources">
<arguments>
<arg>${test_topic}</arg>
<arg>Create new topic</arg>
</arguments>
<kw name="Encode String To Bytes" library="String">
<doc>Encodes the given Unicode ``string`` to bytes using the given ``encoding``.</doc>
<arguments>
<arg>${message_text}</arg>
<arg>UTF-8</arg>
</arguments>
<assign>
<var>${bytes}</var>
</assign>
<msg timestamp="20201229 17:10:54.709" level="INFO">${bytes} = Create new topic</msg>
<status status="PASS" starttime="20201229 17:10:54.709" endtime="20201229 17:10:54.709"></status>
</kw>
<kw name="Send" library="KafkaLibrary">
<doc>Publish a message to a topic.</doc>
<arguments>
<arg>${topic}</arg>
<arg>value=${bytes}</arg>
</arguments>
<status status="PASS" starttime="20201229 17:10:54.709" endtime="20201229 17:10:54.846"></status>
</kw>
<status status="PASS" starttime="20201229 17:10:54.708" endtime="20201229 17:10:54.846"></status>
</kw>
<kw name="Connect To Kafka" library="KafkaLibrary">
<doc>Connect to kafka
- ``bootstrap_servers``: default 127.0.0.1:9092
- ``client_id``: default: Robot</doc>
<arguments>
<arg>bootstrap_servers=${BOOTSTRAP_SERVERS}</arg>
<arg>client_id=${CLIENT_ID}</arg>
<arg>group_id=${GROUP_ID}</arg>
</arguments>
<msg timestamp="20201229 17:10:54.848" level="INFO">&lt;BrokerConnection node_id=bootstrap-0 host=127.0.0.1:9092 &lt;connecting&gt; [IPv4 ('127.0.0.1', 9092)]&gt;: connecting to 127.0.0.1:9092 [('127.0.0.1', 9092) IPv4]</msg>
<msg timestamp="20201229 17:10:54.848" level="INFO">Probing node bootstrap-0 broker version</msg>
<msg timestamp="20201229 17:10:54.848" level="INFO">&lt;BrokerConnection node_id=bootstrap-0 host=127.0.0.1:9092 &lt;connecting&gt; [IPv4 ('127.0.0.1', 9092)]&gt;: Connection complete.</msg>
<msg timestamp="20201229 17:10:54.958" level="INFO">Broker version identified as 2.3.0</msg>
<msg timestamp="20201229 17:10:54.958" level="INFO">Set configuration api_version=(2, 3, 0) to skip auto check_version requests on startup</msg>
<msg timestamp="20201229 17:10:54.966" level="INFO">&lt;BrokerConnection node_id=bootstrap-0 host=127.0.0.1:9092 &lt;connecting&gt; [IPv4 ('127.0.0.1', 9092)]&gt;: connecting to 127.0.0.1:9092 [('127.0.0.1', 9092) IPv4]</msg>
<msg timestamp="20201229 17:10:54.967" level="INFO">Probing node bootstrap-0 broker version</msg>
<msg timestamp="20201229 17:10:54.967" level="INFO">&lt;BrokerConnection node_id=bootstrap-0 host=127.0.0.1:9092 &lt;connecting&gt; [IPv4 ('127.0.0.1', 9092)]&gt;: Connection complete.</msg>
<msg timestamp="20201229 17:10:55.078" level="INFO">Broker version identified as 2.3.0</msg>
<msg timestamp="20201229 17:10:55.079" level="INFO">Set configuration api_version=(2, 3, 0) to skip auto check_version requests on startup</msg>
<status status="PASS" starttime="20201229 17:10:54.846" endtime="20201229 17:10:55.088"></status>
</kw>
<kw name="Get Kafka Topics" library="KafkaLibrary">
<doc>Return list of kafka topics.</doc>
<assign>
<var>${topics_after_create}</var>
</assign>
<msg timestamp="20201229 17:10:55.097" level="INFO">${topics_after_create} = ['test-topic-wqqy', '__confluent.support.metrics', '_confluent-metrics']</msg>
<status status="PASS" starttime="20201229 17:10:55.090" endtime="20201229 17:10:55.097"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${topics_after_create}</arg>
</arguments>
<assign>
<var>${topics_after_create_no}</var>
</assign>
<msg timestamp="20201229 17:10:55.101" level="INFO">Length is 3</msg>
<msg timestamp="20201229 17:10:55.101" level="INFO">${topics_after_create_no} = 3</msg>
<status status="PASS" starttime="20201229 17:10:55.100" endtime="20201229 17:10:55.101"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${topics_no} &lt; ${topics_after_create_no}</arg>
</arguments>
<status status="PASS" starttime="20201229 17:10:55.101" endtime="20201229 17:10:55.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${topics_after_create}</arg>
<arg>${test_topic}</arg>
</arguments>
<status status="PASS" starttime="20201229 17:10:55.102" endtime="20201229 17:10:55.102"></status>
</kw>
<status status="PASS" starttime="20201229 17:10:54.526" endtime="20201229 17:10:55.102" critical="yes"></status>
</test>
<kw name="Close" library="KafkaLibrary" type="teardown">
<doc>Close the consumer, waiting indefinitely for any needed cleanup.</doc>
<msg timestamp="20201229 17:10:55.103" level="INFO">&lt;BrokerConnection node_id=bootstrap-0 host=127.0.0.1:9092 &lt;connected&gt; [IPv4 ('127.0.0.1', 9092)]&gt;: Closing connection. </msg>
<status status="PASS" starttime="20201229 17:10:55.103" endtime="20201229 17:10:55.104"></status>
</kw>
<status status="PASS" starttime="20201229 17:10:54.188" endtime="20201229 17:10:55.104"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="3" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" id="s1" name="02 Topic">02 Topic</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
